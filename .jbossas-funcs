export VERSION_72=jboss-as-7.2.0.Alpha1-SNAPSHOT
export VERSION_71=jboss-as-7.1.3.Final-SNAPSHOT
export WORKSPACE="$HOME/workspace"
alias "7.1=cd $WORKSPACE/jboss-as/ && git checkout 7.1 && export JBOSS_HOME=$WORKSPACE/jboss-as/build/target/$VERSION_71 && resetup"
alias "7.2=cd $WORKSPACE/jboss-as/ && git checkout master && export JBOSS_HOME=$WORKSPACE/jboss-as/build/target/$VERSION_72 && resetup"  

export JAVA_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=n -Xmx1024m -XX:MaxPermSize=512m -Djboss.modules.system.pkgs=com.yourkit -enableassertions"
export DEBUG='-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=y -Xmx1024m -XX:MaxPermSize=512m -Djboss.modules.system.pkgs=com.yourkit -enableassertions'
export PROFILE="-agentpath:/Applications/YourKit_Java_Profiler_10.0.1.app/bin/mac/libyjpagent.jnilib=disablestacktelemetry,disableexceptiontelemetry,builtinprobes=none -Djboss.modules.system.pkgs=com.yourkit"
export PROFILE_START="-agentpath:/Applications/YourKit_Java_Profiler_9.5.4.app/bin/mac/libyjpagent.jnilib=disablestacktelemetry,disableexceptiontelemetry,builtinprobes=none,tracing  -Djboss.modules.system.pkgs=com.yourkit"

alias "cb=cd $WORKSPACE/jboss-as && mvn clean install -DallTests && stty sane"
alias tckfail="ant -DpriorStatus="fail,error" runclient"

resetup () {
 export DEPLOY="$JBOSS_HOME/standalone/deployments"
 alias "jb=cd $JBOSS_HOME/bin && ./standalone.sh"
 export TS_HOME=/Users/stuart/workspace/tck
 export JAVAEE_HOME=$JBOSS_HOME
 export JAVAEE_HOME_RI=/Users/stuartdouglas/workspace/glassfishv3
 export DERBY_HOME=$JAVAEE_HOME_RI/javadb
}

sync() {
  cd $WORKSPACE/jboss-as
  git fetch upstream
  git checkout master
  git reset --hard upstream/master
  git checkout 7.1
  git reset --hard upstream/7.1
}


pull() {

  git fetch upstream

  git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')  

  ref=`curl https://api.github.com/repos/jbossas/jboss-as/pulls/$1 | tr -d '\n' | perl -MData::Dumper -MJSON=from_json -ne'$a=from_json($_); print  $$a{base}{ref}'`
  if [[ $ref != $git_branch ]]; then
     echo "Pull request targetted at $ref but you are currently on $git_branch"
     return;
  fi
  
  merged=`git rev-list $git_branch | grep $(git rev-parse upstream/$git_branch)`
  
  if [ -z "$merged" ]; then
  	echo "$git_branch is not in sync with upstream"
  	return;
  fi  

  cmd="git fetch upstream "
  cmd="$cmd pull/$1/head:pullRequest$1"
  echo $cmd
  $cmd

    git checkout pullRequest$1
    git rebase $git_branch 
    if [[ $? -ne 0 ]]; then
    	git checkout $git_branch 
    	git branch -D pullRequest$1
        return
    fi
    git checkout $git_branch 
    git merge --ff-only  pullRequest$1
    git branch -D pullRequest$1
}

b() {
  CUR=`pwd`	
  cd $WORKSPACEjboss-as
  cd $1
  mvn install 
  cp target/*.jar ../build/target/$JBOSS_VERSION/modules/org/jboss/as/$1/main
  cd $CUR
}